syntax = "proto3";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "user/common.proto";
//import "user/user.proto";
//import "tag.proto";


package user;
option go_package = "github.com/resonatecoop/user-api/proto/user";

message UserGroupRequest {
  string id = 1; // required
}

message UserGroupMembershipRequest {
  string group_id = 1; // required
  string member_id = 2; //required
}

message UserGroup {
  string ID = 1; // required
  string display_name = 2; // required
  string description = 3;
  string short_bio = 4;
  string avatar = 5; // required
  string banner = 6;
  string owner_id = 7; // required
  string group_type = 8; // UUID required
  repeated User followers = 9;
  repeated UserGroup members = 10;
  repeated UserGroup memberOfGroups = 11;
  repeated Link links = 12;
  repeated Tag tags = 13;
  StreetAddress address = 14;
  Privacy privacy = 15;
  repeated RelatedUserGroup recommended_artists = 16;
  // map<string, string> publisher = 17;
  // map<string, string> pro = 18;
  string group_email = 17;
}

message UserGroupCreateRequest {
  string id = 1; // UUID required
  string display_name = 2; // required
  string description = 3; // optional
  string short_bio = 4; // optional 
  string avatar = 5; // UUID
  string banner = 6; // UUID
  string group_type = 8; // required UUID
  repeated string tags = 9; // optional UUIDs
  string group_email = 10; // optional
  repeated string links = 11;
  // repeated User followers = 9;
  // repeated UserGroup members = 10;
  // repeated UserGroup memberOfGroups = 11;
  //StreetAddress address = 14;
  //Privacy privacy = 15;
  //repeated RelatedUserGroup recommended_artists = 16;
  //map<string, string> publisher = 17;
  //map<string, string> pro = 18;
}

message UserGroupUpdateRequest {
  string id = 1; // required
  optional string display_name = 2;
  optional string description = 3;
  optional string short_bio = 4;
  optional string avatar = 5; 
  optional string banner = 6;
  optional string group_type = 7;
  optional string group_email = 9;
  optional string owner_id = 10;
  repeated string links = 11;
  repeated string tags = 12;
  
  //optional StreetAddress address = 8;
  //optional string owner_id = 7; // required

  // repeated User followers = 9;
  // repeated UserGroup members = 10;
  // repeated UserGroup memberOfGroups = 11;
  
  // Privacy privacy = 15;
  // repeated RelatedUserGroup recommended_artists = 16;
  // map<string, string> publisher = 17;
  // map<string, string> pro = 18;
  
}

message UserGroupPrivateResponse {
  string id = 1;
  string display_name = 2; // required
  string description = 3;
  string short_bio = 4;
  string avatar = 5; // required
  string banner = 6;
  string owner_id = 7; // required
  string group_type = 8; // required
  // repeated string followers = 9;
  // repeated string members = 10;
  // repeated string memberOfGroups = 11;
  // repeated string links = 12;
  // repeated string tags = 13;
//  StreetAddress address = 13;
  // Privacy privacy = 14;
  //repeated RelatedUserGroup recommended_artists = 15;
  //map<string, string> publisher = 16;
  //map<string, string> pro = 17;
  string group_email = 9;
  string created_at = 10;
  string updated_at = 11;
}

message UserGroupListResponse {
  repeated UserGroupPrivateResponse usergroup = 1;
}


message UserGroupPublicResponse {
  string display_name = 2; // required
  string description = 3;
  string short_bio = 4;
  string avatar = 5; // required
  string banner = 6;
  string group_type = 8; // required
  repeated string followers = 9;
  repeated string members = 10;
  repeated string memberOfGroups = 11;
  repeated Link links = 12;
  repeated string tags = 13;
  // repeated RelatedUserGroup recommended_artists = 17;
  // map<string, string> publisher = 21;
  // map<string, string> pro = 22;
  string group_email = 23;
}


message UserGroupRecommended {
  string user_group_id = 1;
  string recommended_id = 2;
}

message UserGroupMembers {
  string user_group_id = 1;
  repeated string members = 2;
}

message Group {
  string ID = 1;
  string name = 2;
  string description = 3;
}

message GroupTypes {
  repeated Group types = 1;
}

message Link {
  string ID = 1;
  string platform = 2;
  string group_type = 3;
  string uri = 4;
  bool personal_data = 5;
}

message Privacy {
  string ID = 1;
  bool private = 2;
  bool owned_tracks = 3;
  bool supported_artists = 4;
}

message GroupedUserGroups {
  repeated UserGroupPublicResponse groups = 1;
}


